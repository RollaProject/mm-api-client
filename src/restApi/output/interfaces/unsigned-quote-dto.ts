/* tslint:disable */
/* eslint-disable */
/**
 * Rolla Yield API - Market Maker
 * Rolla Yield API provides a RESTful API for fetching assets, options and quotes
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { QuoteDtoOptionAttributes } from './quote-dto-option-attributes';
// May contain unused imports in some cases
// @ts-ignore
import { QuoteDtoOrderTracking } from './quote-dto-order-tracking';

/**
 * 
 * @export
 * @interface UnsignedQuoteDto
 */
export interface UnsignedQuoteDto {
    /**
     * The timestamp when the order expires. If the block timestamp is after this timestamp when the order is submitted to the chain by the taker, the order will fail.
     * @type {string}
     * @memberof UnsignedQuoteDto
     */
    'orderExpirationTimestamp': string;
    /**
     * The address of the taker of the order (seller of options)
     * @type {string}
     * @memberof UnsignedQuoteDto
     */
    'taker': string;
    /**
     * The amount of options being sold in whole units - qTokens have 18 decimals
     * @type {string}
     * @memberof UnsignedQuoteDto
     */
    'takingAmount': string;
    /**
     * 
     * @type {QuoteDtoOptionAttributes}
     * @memberof UnsignedQuoteDto
     */
    'optionAttributes': QuoteDtoOptionAttributes;
    /**
     * The address of the asset that the option is being purchased with
     * @type {string}
     * @memberof UnsignedQuoteDto
     */
    'makerAsset': string;
    /**
     * Whether the taker is the signer of the order. If true, the taker is the signer of the order. If false, the maker is the signer of the order.
     * @type {boolean}
     * @memberof UnsignedQuoteDto
     */
    'takerIsSigner': boolean;
    /**
     * 
     * @type {QuoteDtoOrderTracking}
     * @memberof UnsignedQuoteDto
     */
    'orderTracking': QuoteDtoOrderTracking;
    /**
     * The timestamp when the order was created. This is used for the cancel all functionality. When the on chain cancellation timestamp of the maker is after the orderCreationTimestamp, the order will fail.
     * @type {string}
     * @memberof UnsignedQuoteDto
     */
    'orderCreationTimestamp': string;
    /**
     * The address of the maker of the order (signer of order, buyer of options)
     * @type {string}
     * @memberof UnsignedQuoteDto
     */
    'maker': string;
    /**
     * The amount of makerAsset being offered in exchange for takingAmount
     * @type {string}
     * @memberof UnsignedQuoteDto
     */
    'makingAmount': string;
    /**
     * The user who can submit the order to the chain. Zero address means anyone.
     * @type {string}
     * @memberof UnsignedQuoteDto
     */
    'allowedSender': string;
    /**
     * If the OrderProtocol contract is being called by a contract address and not directly by an EOA, the contract used to call the order protocol must be in the whitelist specified. If the whitelist is the zero address, any contract is allowed. Note, this doesnt prevent transitive calls i.e. contract B can call contract A which is whitelisted in whitelist and the order would succeed.
     * @type {string}
     * @memberof UnsignedQuoteDto
     */
    'whitelist': string;
}

